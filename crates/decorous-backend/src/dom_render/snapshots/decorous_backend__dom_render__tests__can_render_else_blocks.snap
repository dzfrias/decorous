---
source: crates/decorous-backend/src/dom_render/mod.rs
expression: "String::from_utf8(out).unwrap()"
---
let hello = 0;
const dirty = new Uint8Array(new ArrayBuffer(0));
function create_main_block(target, anchor) {
function mount(target, newNode, anchor) {
target.insertBefore(newNode, anchor || null);
}
const e0_anchor = document.createTextNode("");
function create_0_block(target, anchor) {
function mount(target, newNode, anchor) {
target.insertBefore(newNode, anchor || null);
}
const e1 = document.createTextNode("wow ");
mount(target, e1, anchor);
return {
u(dirty) {
},
d() {
e1.parentNode.removeChild(e1);
}
};
}

function create_0_else_block(target, anchor) {
function mount(target, newNode, anchor) {
target.insertBefore(newNode, anchor || null);
}
const e2 = document.createTextNode("woah ");
mount(target, e2, anchor);
return {
u(dirty) {
},
d() {
e2.parentNode.removeChild(e2);
}
};
}

mount(target, e0_anchor, anchor);
let e0;
let e0_on = false;
if (hello == 0) { e0 = create_0_block(e0_anchor.parentNode, e0_anchor); e0_on = true; } else { e0 = create_0_else_block(e0_anchor.parentNode, e0_anchor); }
return {
u(dirty) {
if (hello == 0) { if (e0 && e0_on) { e0.u(dirty); } else { e0_on = true; e0.d(); e0 = create_0_block(e0_anchor.parentNode, e0_anchor); } } else if (e0_on) { e0_on = false; e0.d(); e0 = create_0_else_block(e0_anchor.parentNode, e0_anchor); }
},
d() {
if (e0) e0.d();
e0_anchor.parentNode.removeChild(e0_anchor);
}
};
}
function __init_ctx() {

return [];
}
const ctx = __init_ctx();
const fragment = create_main_block(document.getElementById("test"));
let updating = false;
function __schedule_update(ctx_idx, val) {
ctx[ctx_idx] = val;
dirty[Math.max(Math.ceil(ctx_idx / 8) - 1, 0)] |= 1 << (ctx_idx % 8);
if (updating) return;
updating = true;
Promise.resolve().then(() => {
fragment.u(dirty);
updating = false;
dirty.fill(0);
});
}

