---
source: crates/decorous-backend/src/dom_render/mod.rs
expression: "String::from_utf8(out).unwrap()"
---
const dirty = new Uint8Array(new ArrayBuffer(1));
function create_main_block(target, anchor) {
function mount(target, newNode, anchor) {
target.insertBefore(newNode, anchor || null);
}
const e0 = document.createTextNode((ctx[0], ctx[1]));
const e1 = document.createTextNode(" ");
const e2 = document.createElement("button");
e2.textContent = "Hi";
e2.addEventListener("click", ctx[2])
mount(target, e0, anchor);
mount(target, e1, anchor);
mount(target, e2, anchor);
return {
u(dirty) {
if (dirty[0] & 3) e0.data = (ctx[0], ctx[1]);
},
d() {
e0.parentNode.removeChild(e0);
e1.parentNode.removeChild(e1);
e2.parentNode.removeChild(e2);
}
};
}
function __init_ctx() {
let hello = 0;
let test = 1;
let __closure2 = () => { __schedule_update(1, test = 3); __schedule_update(0, hello = 3); };
return [hello,test,__closure2];
}
const ctx = __init_ctx();
const fragment = create_main_block(document.getElementById("test"));
let updating = false;
function __schedule_update(ctx_idx, val) {
ctx[ctx_idx] = val;
dirty[Math.max(Math.ceil(ctx_idx / 8) - 1, 0)] |= 1 << (ctx_idx % 8);
if (updating) return;
updating = true;
Promise.resolve().then(() => {
fragment.u(dirty);
updating = false;
dirty.fill(0);
});
}

