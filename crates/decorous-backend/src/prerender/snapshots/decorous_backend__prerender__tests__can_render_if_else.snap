---
source: crates/decorous-backend/src/prerender/mod.rs
expression: output
---
const dirty = new Uint8Array(new ArrayBuffer(1));
function replace(node) {
  const text = document.createTextNode("");
  node.replaceWith(text);
  return text;
}
function create_0_block(target, anchor) {
function mount(target, newNode, anchor) {
target.insertBefore(newNode, anchor || null);
}
const e1 = document.createTextNode("wow ");
mount(target, e1, anchor);
return {
u(dirty) {
},
d() {
e1.parentNode.removeChild(e1);
}
};
}
const elems = {"0":replace(document.getElementById("0")),"0_block":null,};
function __init_ctx() {
  let x = 0;
  return [x];
}
const ctx = __init_ctx();
let updating = false;
dirty.fill(255);
__update(dirty, true);
dirty.fill(0);
function __update(dirty, initial) {
  if (ctx[0] == 0) { if (elems["0_block"]) { elems["0_block"].u(dirty); } else { elems["0_block"] = create_0_block(elems["0"].parentNode, elems["0"]); } } else if (elems["0_block"]) { elems["0_block"].d(); elems["0_block"] = null; }
}
function __schedule_update(ctx_idx, val) {
  ctx[ctx_idx] = val;
  dirty[Math.max(Math.ceil(ctx_idx / 8) - 1, 0)] |= 1 << (ctx_idx % 8);
  if (updating) return;
  updating = true;
  Promise.resolve().then(() => {
    __update(dirty, false);
    updating = false;
    dirty.fill(0);
  });
}

---
<span id="0"></span>
